{"version":3,"sources":["img/posterplaceholder.jpg","apis/movie/movieAPI.js","apis/movie/key.js","components/Helper/Loader.js","components/Movie/MovieCard.js","components/Movie/MovieList.js","hooks/useMovieSearch.js","Pages/PopularMovies.js","Pages/LeftLayout.js","components/Movie/Detail.js","Pages/Movie.js","components/Navigation/Navigation.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","baseURL","getMovie","movieId","a","fetchUrl","process","axios","get","authResponse","response","data","getMovies","pageNumber","fetchUrlMovies","rotate","keyframes","scale","Container","styled","div","Spinner","Spinner5","LoadingText","h1","Loader","CardContainer","StyledImg","img","StyledRating","RatingIcon","FontAwesomeIcon","attrs","icon","faStar","StyledTitle","h5","MovieCard","props","renderRating","movie","poster_path","title","vote_average","id","imageURL","to","ref","forwardRef","src","AltPoster","alt","MovieContainer","MovieList","useState","setPageNumber","loading","setLoading","error","setError","movies","setMovies","hasMore","setHasMore","useEffect","prevMovies","Set","results","map","b","total_pages","console","fetchData","useMovieSearch","observer","useRef","lastMovieElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","renderMovieCards","index","length","key","Wrapper","PageText","PopularMovies","Content","Background","Left","Right","posterPath","ContentContainer","LeftLayout","children","backdropImage","CenterContainer","BottomContainer","DetailContainer","Header","MovieTitle","DetailTitle","Text","p","MoviePlot","RuntimeIcon","faStopwatch","TaglineText","h3","Details","log","genresArray","genres","item","name","convertedRuntime","num","hours","rhours","Math","floor","minutes","round","convertRuntime","runtime","convertedReleaseDate","moment","release_date","tagline","join","style","display","marginTop","color","marginLeft","overview","revenue","toLocaleString","budget","format","Movie","setMovie","parseInt","match","params","backdrop_path","Detail","StyledLink","NavLink","StyledNavbar","nav","linkStyle","Navigation","exact","activeStyle","boxShadow","PageLink","Link","NotFound","App","from","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.afed678d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/posterplaceholder.5eb0b883.jpg\";","import axios from \"axios\";\r\nimport { TMDB_API_KEY } from \"./key\";\r\n\r\nconst baseURL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const getMovie = async(movieId) => \r\n{\r\n    try\r\n    {\r\n        const fetchUrl = `${baseURL}/movie/${movieId}?api_key=${TMDB_API_KEY}&language=en-US&append_to_response=credits,videos,images&include_image_language=en,null`;\r\n        const authResponse = await axios.get(fetchUrl);\r\n        const response = authResponse.data;\r\n        return response;\r\n    }\r\n    catch(error)\r\n    {\r\n      throw error;\r\n    }\r\n}\r\n\r\n\r\nexport const getMovies = async(pageNumber) => \r\n{\r\n    try\r\n    {\r\n        const fetchUrlMovies= `${baseURL}/discover/movie?api_key=${TMDB_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${pageNumber}`;\r\n        const authResponse = await axios.get(fetchUrlMovies);\r\n        const response = authResponse.data;\r\n        return response;\r\n    }\r\n    catch(error)\r\n    {\r\n      throw error;\r\n    }\r\n}","export const TMDB_API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Spinner5 } from \"@styled-icons/icomoon/Spinner5\";\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\nconst scale = keyframes`\r\n   0% { transform: scale(1); }\r\n    50% { transform: scale(1.2); }\r\n    100% { transform: scale(1); }\r\n`;\r\nconst Container = styled.div`\r\n  animation: ${scale} 1.5s linear infinite;\r\n  width: 100%;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #7ca579;\r\n  z-index:9999,\r\n`;\r\nconst Spinner = styled(Spinner5)`\r\n  animation: ${rotate} 1.25s linear infinite;\r\n  height: 4rem;\r\n  width: 4rem;\r\n  color: #3DBB3D;\r\n`;\r\n\r\nconst LoadingText = styled.h1`\r\n  color: #3DBB3D;\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Container>\r\n      <Spinner />\r\n      <LoadingText>Loading Results</LoadingText>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport AltPoster from \"../../img/posterplaceholder.jpg\";\r\n\r\nconst CardContainer = styled.div`\r\n  position: relative;\r\n  flex: 0 0 calc(20% - 40px);\r\n  margin: 36px 20px;\r\n  display: flex;\r\n\r\n  /* margin: 1.55vw 1vw; */\r\n\r\n  border-radius: 10px 10px 0 0;\r\n  transition: transform ease 300ms;\r\n  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);\r\n  color: white;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n\r\n    backface-visibility: hidden;\r\n    transform: scale(1.05);\r\n  }\r\n\r\n  :active {\r\n    transform: translateY(-0.1rem);\r\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  @media screen and (max-width: 3000px) {\r\n    flex: 0 0 calc(18.2857% - 36px);\r\n    margin: 24px 18px;\r\n  }\r\n\r\n  @media screen and (max-width: 1921px) {\r\n    flex: 0 0 calc(18.6667% - 28px);\r\n    margin: 22px 14px;\r\n  }\r\n\r\n  @media screen and (max-width: 1440px) {\r\n    flex: 0 0 calc(20% - 20px);\r\n    margin: 15px 10px;\r\n  }\r\n\r\n  @media screen and (max-width: 1025px) {\r\n    flex: 0 0 calc(25% - 16px);\r\n    margin: 10px 8px;\r\n  }\r\n\r\n  @media screen and (max-width: 779px) {\r\n    flex: 0 0 calc(33.33% - 16px);\r\n    margin: 10px 8px;\r\n  }\r\n\r\n  @media screen and (max-width: 361px) {\r\n    /* flex: 1 0 33%; */\r\n    flex: 0 0 calc(50% - 10px);\r\n    margin: 10px 5px;\r\n  }\r\n`;\r\nconst StyledImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst StyledRating = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  margin: 0.25rem;\r\n  padding: 0.3rem;\r\n  border-radius: 10%;\r\n  background-color: rgba(0, 0, 0, 0.808);\r\n`;\r\nconst RatingIcon = styled(FontAwesomeIcon).attrs({ icon: faStar })`\r\n  color: gold;\r\n  margin: 0 0.25rem 0 0;\r\n`;\r\nconst StyledTitle = styled.h5`\r\n  position: absolute;\r\n  bottom: 0;\r\n  margin: 0.0rem;\r\n  padding: 0.0rem;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  width: 100%;\r\n`;\r\n\r\nconst MovieCard = (props) => {\r\n  const { poster_path, title, vote_average, id } = props.movie;\r\n  const imageURL = `https://image.tmdb.org/t/p/w780${poster_path}`;\r\n\r\n  let renderRating;\r\n  if (vote_average !== 0) {\r\n    renderRating = (\r\n      <StyledRating>\r\n        <RatingIcon />\r\n        {vote_average}\r\n      </StyledRating>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CardContainer>\r\n      <Link to={\"/popular/\" + id}>\r\n        <StyledImg\r\n          ref={props.forwardRef  ? props.forwardRef  : null}\r\n          src={poster_path ? imageURL : AltPoster}\r\n          alt={`${title} poster`}\r\n        />\r\n      </Link>\r\n      {renderRating}\r\n      {<StyledTitle>{props.movie.title}</StyledTitle>}\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default MovieCard;","import React, { useState, useRef, useCallback } from 'react'\r\nimport styled from \"styled-components\";\r\nimport useMovieSearch from '../../hooks/useMovieSearch'\r\nimport Loader from \"../Helper/Loader\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nconst MovieContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  padding: 3em 3.5em;\r\n\r\n  @media screen and (max-width: 3000px) {\r\n    padding: 2em 2.5em;\r\n  }\r\n\r\n  @media screen and (max-width: 2000px) {\r\n    padding: 2em 2.5em;\r\n  }\r\n\r\n  @media screen and (max-width: 1440px) {\r\n    padding: 1.5em;\r\n  }\r\n\r\n  @media screen and (max-width: 1025px) {\r\n    padding: 1em 0.65em;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    padding: 0.35em;\r\n  }\r\n\r\n  @media screen and (max-width: 361px) {\r\n    padding: 0.25em;\r\n  }\r\n`;\r\n\r\nconst MovieList = () => {\r\n  const [pageNumber, setPageNumber] = useState(1)\r\n  const {movies, hasMore, loading, error } = useMovieSearch(pageNumber)\r\n  const observer = useRef();\r\n  const lastMovieElementRef = useCallback(node => {\r\n      if (loading) return\r\n      if (observer.current) observer.current.disconnect()\r\n      observer.current = new IntersectionObserver(entries => {\r\n          if (entries[0].isIntersecting && hasMore) {\r\n              setPageNumber(prevPageNumber => prevPageNumber + 1)\r\n          }\r\n      })\r\n      if (node) observer.current.observe(node)\r\n  }, [loading, hasMore])\r\n\r\n  const renderMovieCards = movies.map((movie, index) => {\r\n    if (movies.length === index + 1) \r\n    {\r\n      return <MovieCard key={movie.id} forwardRef={lastMovieElementRef} movie={movie}></MovieCard>\r\n    }else \r\n    {\r\n      return <MovieCard key={movie.id} movie={movie}></MovieCard>\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {error && <div>An error occured, please try again.</div>}\r\n      {<>\r\n        <MovieContainer>{renderMovieCards}</MovieContainer>\r\n        <div>{loading && <Loader />}</div>\r\n      </>\r\n      }\r\n    </>\r\n    );\r\n};\r\n\r\nexport default MovieList;\r\n","import { useEffect, useState } from 'react'\r\nimport {getMovies} from \"../apis/movie/movieAPI\";\r\n\r\nexport default function useMovieSearch(pageNumber) {\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n  const [movies, setMovies] = useState([])\r\n  const [hasMore, setHasMore] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    setError(false)\r\n    \r\n    async function fetchData() {\r\n      try {\r\n        const response = await getMovies(pageNumber);\r\n        setMovies(prevMovies => {\r\n          return [...new Set([...prevMovies, ...response.results.map(b => b)])]\r\n        })\r\n        setHasMore(response.total_pages > pageNumber)\r\n        setLoading(false)\r\n      } \r\n      catch (error) {\r\n        console.error(\"Data Fetching Error:\", \"font-size: 18px\", error);\r\n        setError(true)\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [pageNumber])\r\n\r\n  return { loading, error, movies, hasMore }\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport MovieList from \"../components/Movie/MovieList\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 4em;\r\n  text-align: center;\r\n  @media screen and (max-width: 500px) {\r\n    margin-top: 3em;\r\n  }\r\n`;\r\nconst PageText = styled.h1`\r\n  margin: 0 6em;\r\n  color: #3DBB3D;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    margin: 1em;\r\n  }\r\n`;\r\n\r\nconst PopularMovies = () => {\r\n  return (\r\n    <Wrapper>\r\n      <PageText>Popular Movies</PageText>\r\n      <MovieList />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PopularMovies;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Content = styled.div`\r\n  height: 100vh;\r\n  position: relative;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\nconst Left = styled.div`\r\n  background: black;\r\n  width: 30%;\r\n  position: relative;\r\n\r\n  ::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background-image: linear-gradient(to right, #000, transparent);\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 100%;\r\n    width: 275px;\r\n  }\r\n`;\r\n\r\nconst Right = styled.div`\r\n  background: no-repeat center url(${props => props.posterPath});\r\n  background-size: cover;\r\n\r\n  width: 70%;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  color: white;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  padding: 30px;\r\n`;\r\n\r\nconst LeftLayout = ({ children, backdropImage }) => {\r\n  return (\r\n    <Content>\r\n      <Background>\r\n        <Left></Left>\r\n        <Right\r\n          //   conditionalBgGradient={gradientChange}\r\n          posterPath={backdropImage}\r\n        ></Right>\r\n      </Background>\r\n      <ContentContainer>{children}</ContentContainer>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default LeftLayout;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar, faStopwatch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst CenterContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 30%;\r\n\r\n  margin: 3rem 1.5rem;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    font-size: 14px;\r\n    width: calc(100% - 7em);\r\n    height: calc(100% - 3.5em);\r\n    margin: 0 3.5em 3.5em 3.5em;\r\n    justify-content: flex-end;\r\n    align-items: stretch;\r\n  }\r\n\r\n  @media screen and (max-width: 599px) {\r\n    font-size: 12px;\r\n    width: calc(100% - 3em);\r\n    height: calc(100% - 3.5em);\r\n    margin: 0 1.5em 3.5em 1.5em;\r\n    justify-content: flex-end;\r\n    align-items: stretch;\r\n  }\r\n`;\r\n\r\nconst BottomContainer = styled.div`\r\n  display: flex;\r\n\r\n  @media screen and (max-width: 1500px) and (min-width: 1024px) {\r\n    flex-flow: column;\r\n  }\r\n`;\r\n\r\nconst DetailContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 3em 1em 1em 1em;\r\n\r\n  @media screen and (max-width: 1500px) {\r\n    margin: 0.75em auto;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  margin-bottom: 1em;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    margin-bottom: 0.5em;\r\n  }\r\n\r\n  h1 {\r\n    font-family: \"Titillium Web\", sans-serif;\r\n    font-size: 3.5em;\r\n    text-shadow: -1px -1px 1px #aaa, 0px 4px 1px rgba(0, 0, 0, 0.5),\r\n      4px 4px 5px rgba(0, 0, 0, 0.7), 0px 0px 7px rgba(0, 0, 0, 0.4);\r\n    margin: 0 0 0.25em 0;\r\n    padding: 0;\r\n\r\n    @media screen and (max-width: 1023px) {\r\n      font-size: 1.667em;\r\n    }\r\n  }\r\n\r\n  h2 {\r\n    font-size: 1.25em;\r\n    margin: 0.1em 0;\r\n  }\r\n`;\r\n\r\nconst MovieTitle = styled.h1`\r\n  font-family: \"Titillium Web\", sans-serif;\r\n  font-size: 3.5em;\r\n  text-shadow: -1px -1px 1px #aaa, 0px 4px 1px rgba(0, 0, 0, 0.5),\r\n    4px 4px 5px rgba(0, 0, 0, 0.7), 0px 0px 7px rgba(0, 0, 0, 0.4);\r\n  margin: 0.15em 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst DetailTitle = styled(MovieTitle)`\r\n  font-size: 1em;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 1em;\r\n  margin: 0;\r\n`;\r\n\r\nconst MoviePlot = styled.div`\r\n  margin-top: 3em;\r\n\r\n  h1 {\r\n    font-size: 1.25em;\r\n    margin: 0.1em 0;\r\n  }\r\n\r\n  p {\r\n    font-size: 1em;\r\n    line-height: 1.4;\r\n    width: 85%;\r\n  }\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    margin-top: 0.5em;\r\n\r\n    p {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RuntimeIcon = styled(FontAwesomeIcon).attrs({ icon: faStopwatch })`\r\n  margin: 0 0.25rem;\r\n`;\r\n\r\nconst RatingIcon = styled(FontAwesomeIcon).attrs({ icon: faStar })`\r\n  margin: 0 0.25rem;\r\n`;\r\n\r\nconst TaglineText = styled.h3`\r\n  font: italic 600 1.75em \"Titillium Web\", sans-serif;\r\n  text-align: center;\r\n  max-width: 85%;\r\n  margin: 1em 1em 1em 0;\r\n\r\n  :before {\r\n    color: grey;\r\n    content: open-quote;\r\n    font-size: 2em;\r\n    line-height: 0.1em;\r\n    margin-right: 0.2em;\r\n    vertical-align: -0.2em;\r\n  }\r\n\r\n  :after {\r\n    color: grey;\r\n    content: close-quote;\r\n    font-size: 2em;\r\n    line-height: 0.1em;\r\n    margin-left: 0.1em;\r\n    vertical-align: -0.2em;\r\n  }\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    text-align: left;\r\n    font-size: 1.5em;\r\n  }\r\n\r\n  @media screen and (max-width: 799px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Details = ({movie}) => {\r\n    console.log(movie)\r\n    let genresArray = movie ? movie.genres.map((item) => item.name) : null;\r\n\r\n    const convertRuntime = (num) => {\r\n    let hours = num / 60;\r\n    let rhours = Math.floor(hours);\r\n    let minutes = (hours - rhours) * 60;\r\n    let rminutes = Math.round(minutes);\r\n    return rhours + \"h \" + rminutes + \"m\";\r\n    };\r\n\r\n    const convertedRuntime = movie ? convertRuntime(movie.runtime) : null;\r\n\r\n    const convertedReleaseDate = movie\r\n        ? moment(movie.release_date, \"YYYY-MM-DD\")\r\n        : null;\r\n\r\n  return (\r\n    <>\r\n      {movie ? (\r\n        <CenterContainer>\r\n          <Header>\r\n            <h1>{movie.title}</h1>\r\n            {movie.tagline && <TaglineText>{movie.tagline}</TaglineText>}\r\n            <h2>{genresArray.join(\", \")}</h2>\r\n            <div style={{ display: \"flex\", marginTop: \".35em\" }}>\r\n              {movie.runtime !== 0 && (\r\n                <>\r\n                  <h2>\r\n                    <RuntimeIcon />\r\n                    {convertedRuntime}\r\n                  </h2>\r\n                </>\r\n              )}\r\n              {movie.vote_average !== 0 && (\r\n                <>\r\n                  <h2 style={{ color: \"gold\", marginLeft: \".5em\" }}>\r\n                    <RatingIcon />\r\n                    {movie.vote_average}\r\n                  </h2>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Header>\r\n          <MoviePlot>\r\n            <h1>Overview</h1>\r\n            <p>{movie.overview}</p>\r\n          </MoviePlot>\r\n\r\n          <BottomContainer>\r\n            <DetailContainer>\r\n              <DetailTitle>Revenue:</DetailTitle>\r\n              {movie.revenue === 0 ? (\r\n                <Text>Not Available</Text>\r\n              ) : (\r\n                <Text> {\"$ \" + movie.revenue.toLocaleString()}</Text>\r\n              )}\r\n            </DetailContainer>\r\n            <DetailContainer>\r\n              <DetailTitle>Budget:</DetailTitle>\r\n              {movie.budget === 0 ? (\r\n                <Text>Not Available</Text>\r\n              ) : (\r\n                <Text> {\"$ \" + movie.budget.toLocaleString()}</Text>\r\n              )}\r\n            </DetailContainer>\r\n            <DetailContainer>\r\n              <DetailTitle>Release Date:</DetailTitle>\r\n              <Text>{convertedReleaseDate.format(\"LL\")}</Text>\r\n            </DetailContainer>\r\n          </BottomContainer>\r\n        </CenterContainer>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {getMovie} from \"../apis/movie/movieAPI\";\r\nimport LeftLayout from './LeftLayout'\r\nimport Details from '../components/Movie/Detail'\r\n\r\nconst Movie = (props) => {\r\n    const [movie, setMovie] = useState()\r\n    let movieId=parseInt(props.match.params.id, 10);\r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        try {\r\n          const movie = await getMovie(movieId);\r\n          setMovie(movie);\r\n        } \r\n        catch (error) {\r\n              console.error(\"Data Fetching Error:\", \"font-size: 18px\", error);\r\n          }\r\n      }\r\n      fetchData();\r\n    }, [movie]);\r\n\r\n  return (\r\n    movie ?\r\n    (<LeftLayout backdropImage={'https://image.tmdb.org/t/p/original' + movie.backdrop_path}>\r\n        <Details movie={movie} />\r\n    </LeftLayout>)\r\n      : \r\n    null);\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst StyledLink = styled(NavLink)`\r\n  border: 1px solid #7ca887;\r\n  border: none;\r\n\r\n  box-shadow: 0 0.22em #151c24;\r\n  background: none;\r\n  margin: 0em 1.15em;\r\n  padding: 0 0.5em 0.2em;\r\n  outline: none;\r\n  text-decoration: none;\r\n\r\n  font-size: 1.05em;\r\n  font-weight: 600;\r\n  transition: all 0.2s ease-in-out;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 75%;\r\n  }\r\n`;\r\n\r\nconst StyledNavbar = styled.nav`\r\n  display: flex;\r\n  /* background: linear-gradient(\r\n    to bottom,\r\n    rgba(0, 0, 0, 0.5),\r\n    rgba(0, 0, 0, 0.8)\r\n  ); */\r\n  position: absolute;\r\n  top: 0;\r\n\r\n  z-index: 999;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  background: ${(props) => (props.linkStyle ? \"rgba(0, 0, 0, 0.65)\" : \"none\")};\r\n\r\n  padding: 0.5em 0;\r\n\r\n  ${StyledLink} {\r\n    color: ${(props) => (props.linkStyle ? \"white\" : \"#7ca887\")};\r\n    box-shadow: ${(props) => (props.linkStyle ? \"none\" : \"0 0.22em #151c24\")};\r\n  }\r\n\r\n  @media screen and (min-width: 1824px) {\r\n    font-size: 18px;\r\n  }\r\n\r\n  @media screen and (max-width: 700px) {\r\n    font-size: 18px;\r\n    justify-content: center;\r\n\r\n    ${StyledLink} {\r\n      margin: 0 0.75em;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    justify-content: center;\r\n    font-size: 14px;\r\n\r\n    ${StyledLink} {\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 375px) {\r\n    justify-content: center;\r\n    font-size: 12px;\r\n\r\n    ${StyledLink} {\r\n      margin: 0 0.3em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Navigation = () => {\r\n  const activeStyle = {\r\n    boxShadow: \"0em 0.2em teal\",\r\n  };\r\n\r\n  return (\r\n    <StyledNavbar linkStyle={true}>\r\n      <StyledLink exact to=\"/popular\" activeStyle={activeStyle}>\r\n        {\"Popular Movies\"}\r\n      </StyledLink>\r\n    </StyledNavbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 4em;\r\n  text-align: center;\r\n  @media screen and (max-width: 500px) {\r\n    margin-top: 3em;\r\n  }\r\n`;\r\nconst PageText = styled.h1`\r\n  margin: 0 6em;\r\n  color: #3DBB3D;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    margin: 1em;\r\n  }\r\n`;\r\nconst PageLink = styled(Link)`\r\n  color: white;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst NotFound = () => (\r\n  <>\r\n      <Wrapper>\r\n        <PageText>This page doesn't exist</PageText>\r\n        <PageLink to=\"/\">Go back to homepage</PageLink>\r\n      </Wrapper>\r\n  </>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport './App.css';\r\nimport PopularMovies from './Pages/PopularMovies'\r\nimport Movie from './Pages/Movie'\r\nimport Navigation from \"./components/Navigation/Navigation\";\r\nimport NotFound from './components/NotFound'\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n        <Navigation />\r\n        <Switch>\r\n          <Redirect exact from=\"/\" to=\"/popular\" />\r\n          <Route exact path=\"/popular\" component={PopularMovies} />\r\n          <Route path='/popular/:id' component={Movie}/>\r\n          <Route path='/infinite-scroll-movies' component={PopularMovies}/>\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}